---
import SocialList from "@/components/SocialList.astro";
import PostPreview from "@/components/blog/PostPreview.astro";
import { getAllPosts, sortMDByDate } from "@/data/post";
import PageLayout from "@/layouts/Base.astro";

const MAX_POSTS = 10;
const allPosts = await getAllPosts();
const allPostsByDate = sortMDByDate(allPosts).slice(0, MAX_POSTS);

const cactusTech = [
	{
		desc: "Build fast websites, faster.",
		href: "https://astro.build",
		title: "Astro",
	},
	{
		desc: "Rapidly build modern websites without ever leaving your HTML.",
		href: "https://tailwindcss.com",
		title: "Tailwind CSS",
	},
	{
		desc: "Simple and easy-to-use markup language.",
		href: "https://www.markdownguide.org/",
		title: "Markdown",
	},
	{
		desc: "Markdown for the component era.",
		href: "https://mdxjs.com/",
		title: "MDX",
	},
	{
		desc: "Generating png Open Graph images for blog posts.",
		href: "https://github.com/vercel/satori",
		title: "Satori",
	},
	{
		desc: "A fully static search library.",
		href: "https://pagefind.app/",
		title: "Pagefind",
	},
	{
		desc: "An easy to use Icon component for Astro.",
		href: "https://github.com/natemoo-re/astro-icon#readme",
		title: "Astro Icon",
	},
	{
		desc: "Highly customizable source code & syntax highlighter.",
		href: "https://expressive-code.com/",
		title: "Expressive Code",
	},
];
---

<PageLayout meta={{ title: "Home" }}>
	<section>
		<p class="mb-4">PPG Prajabatan 2024</p>
		<SocialList />
	</section>
	<section>
		<span id="AboutDevTypeText" class="typeing"></span><span class="blinker">&#32;</span>
	</section>
	<section aria-label="Blog post list">
		<h2 class="title mb-4 text-xl">Here ðŸ’¥</h2>
		<div class="grid gap-4">
			<div class="grid grid-cols-5 gap-4">
				<figure>
					<a href="https://blog-ppg.vercel.app/tags/filosofipendidikanindonesia/" target="_blank">
						<img
							class="h-auto max-w-full rounded-lg"
							src="/Filosofi.png"
							alt="Filosofi Pendidikan"
						/>
					</a>
				</figure>
				<figure>
					<a href="https://blog-ppg.vercel.app/tags/computationalthinking/" target="_blank">
						<img
							class="h-auto max-w-full rounded-lg"
							src="/Computational.png"
							alt="Computational Thinking"
						/>
					</a>
				</figure>
				<figure>
					<a href="https://blog-ppg.vercel.app/tags/pemahamantentangpesertadidik/" target="_blank">
						<img
							class="h-auto max-w-full rounded-lg"
							src="/Pemahaman.png"
							alt="Pemahaman tentang Peserta Didik"
						/>
					</a>
				</figure>
				<figure>
					<a href="https://blog-ppg.vercel.app/tags/prinsippengajarandanasesmen/" target="_blank">
						<img
							class="h-auto max-w-full rounded-lg"
							src="/Prinsip.png"
							alt="Prinsip Pengajaran dan Asesmen"
						/>
					</a>
				</figure>
				<figure>
					<a href="https://blog-ppg.vercel.app/tags/teknologibarudalampengajaran/" target="_blank">
						<img
							class="h-auto max-w-full rounded-lg"
							src="/Teknologi.png"
							alt="Teknologi Baru dalam Pengajaran"
						/>
					</a>
				</figure>
			</div>
		</div>
	</section>
</PageLayout>

<style>
	body {
		background: black;
	}

	span {
		color: green;
		font-family: monospace;
	}

	.blinker {
		opacity: 1;
		margin-bottom: -2px;
		height: 15px;
		margin-left: -5px;
		border-left: 7px solid black;
		animation: blinker 0.9s steps(2, start) infinite;
	}

	@keyframes blinker {
		to {
			visibility: hidden;
		}
	}
</style>

<script>
	var data = [
		{
			AboutDevTypeText:
				"<span>Layaknya Seorang lelaki, berjuanglah sehancur-hancurnya<br><br>Ingat<br><br>Sehancur-Hancurnya !</span><br/><br/><br/>",
		},
	];

	var allElements = document.getElementsByClassName("typeing");
	for (var j = 0; j < allElements.length; j++) {
		var currentElementId = allElements[j].id;
		var currentElementIdContent = data[0][currentElementId];
		var element = document.getElementById(currentElementId);
		var devTypeText = currentElementIdContent;

		// type code
		var i = 0,
			isTag,
			text;
		(function type() {
			text = devTypeText.slice(0, ++i);
			if (text === devTypeText) return;
			element.innerHTML = text + `<span class='blinker'>&#32;</span>`;
			var char = text.slice(-1);
			if (char === "<") isTag = true;
			if (char === ">") isTag = false;
			if (isTag) return type();
			setTimeout(type, 60);
		})();
	}
</script>
